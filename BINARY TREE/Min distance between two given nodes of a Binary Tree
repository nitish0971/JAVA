class GfG {
    int findDist(Node root, int a, int b) {
        Node lcaval = lca(root,a,b);
        int dist1 = lcaDist(lcaval,a);
        int dist2 = lcaDist(lcaval,b);
        
        return dist1+dist2;
    }
    public static int lcaDist(Node root,int n){
        if(root == null){
            return -1;
        }
        if(root.data == n){
            return 0;
        }
        
        int leftdist = lcaDist(root.left,n);
        int rightdist = lcaDist(root.right,n);
        
        if(leftdist == -1 && rightdist == -1){
            return -1;
        }
        else if(leftdist == -1){
            return rightdist+1;
        }
        else{
            return leftdist+1;
        }
    }
    
    public static Node lca(Node root,int n1,int n2){
        if(root == null || root.data == n1 || root.data == n2){
            return root;
        }
        
        Node leftlca = lca(root.left,n1,n2);
        Node rightlca = lca(root.right,n1,n2);
        
        if(leftlca == null){
            return rightlca;
        }
        if(rightlca == null){
            return leftlca;
        }
        return root;
    }
}
